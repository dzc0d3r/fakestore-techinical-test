// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button Component renders danger button correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#dc3545",
      "borderColor": "#c82333",
      "borderRadius": 8,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 12,
    }
  }
>
  <Text
    style={
      [
        {
          "fontSize": 16,
          "fontWeight": "500",
        },
        {
          "color": "white",
        },
      ]
    }
  >
    Danger
  </Text>
</View>
`;

exports[`Button Component renders loading state correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#2196F3",
      "borderColor": "#1976D2",
      "borderRadius": 8,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 12,
    }
  }
>
  <ActivityIndicator
    color="white"
  />
</View>
`;

exports[`Button Component renders outline button correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#007bff",
      "borderRadius": 8,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 12,
    }
  }
>
  <Text
    style={
      [
        {
          "fontSize": 16,
          "fontWeight": "500",
        },
        {
          "color": "#007bff",
        },
      ]
    }
  >
    Outline
  </Text>
</View>
`;

exports[`Button Component renders primary button correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#2196F3",
      "borderColor": "#1976D2",
      "borderRadius": 8,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 12,
    }
  }
>
  <Text
    style={
      [
        {
          "fontSize": 16,
          "fontWeight": "500",
        },
        {
          "color": "white",
        },
      ]
    }
  >
    Primary
  </Text>
</View>
`;

exports[`Button Component renders primary button with icon and loading state correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#2196F3",
      "borderColor": "#1976D2",
      "borderRadius": 8,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 12,
    }
  }
>
  <ActivityIndicator
    color="white"
  />
</View>
`;

exports[`Button Component renders secondary button correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#4CAF50",
      "borderColor": "#45a049",
      "borderRadius": 8,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 12,
    }
  }
>
  <Text
    style={
      [
        {
          "fontSize": 16,
          "fontWeight": "500",
        },
        {
          "color": "white",
        },
      ]
    }
  >
    Secondary
  </Text>
</View>
`;

exports[`Button Component renders with custom style correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#2196F3",
      "borderColor": "#1976D2",
      "borderRadius": 8,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "center",
      "marginTop": 10,
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 12,
      "width": 200,
    }
  }
>
  <Text
    style={
      [
        {
          "fontSize": 16,
          "fontWeight": "500",
        },
        {
          "color": "white",
        },
      ]
    }
  >
    Custom Style
  </Text>
</View>
`;
